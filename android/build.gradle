<<<<<<< HEAD
// buildscript {
//     ext.kotlin_version = '1.9.25'
//     repositories {
//         google()
//         mavenCentral()
//     }

//     dependencies {
//         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//     }
// }

// allprojects {
//   repositories {
//     google()
//     mavenCentral()
//   }
// }

// rootProject.buildDir = '../build'

// subprojects {
//   project.buildDir = "${rootProject.buildDir}/${project.name}"
// }
// subprojects {
//   project.evaluationDependsOn(':app')
// }

// tasks.register("clean", Delete) {
//     delete rootProject.buildDir
// }
// ------------------------------------------------------------------
buildscript {
    ext.kotlin_version = '1.9.0'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.android.tools.build:gradle:8.1.2' // required
        classpath 'com.google.gms:google-services:4.4.1' // for Firebase core
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9' // for crashlytics
        classpath 'com.google.firebase:perf-plugin:1.4.2' // for performance monitoring
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" } // optional but helps with other dependencies
=======
buildscript {
    ext.kotlin_version = '1.9.25'
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:8.3.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:4.4.0"
        classpath "com.google.firebase:perf-plugin:1.4.2"
        classpath "com.google.firebase:firebase-crashlytics-gradle:2.9.9"
>>>>>>> e07ed3f5bba02f677bebb989a7ee35cc18d7451a
    }
}

rootProject.buildDir = '../build'

subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}

subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
